/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_AVAudioSessionCategoryPlayback.h"

#import "NSCoding-Protocol.h"
#import "NSCopying-Protocol.h"
#import "NSURLConnectionDataDelegate-Protocol.h"
#import "NSURLConnectionDelegate-Protocol.h"

@class NSData, NSDictionary, NSError, NSOutputStream, NSRecursiveLock, NSSet, NSString, NSURLConnection, NSURLCredential, NSURLRequest, NSURLResponse;

@interface AFURLConnectionOperation : _AVAudioSessionCategoryPlayback <NSURLConnectionDelegate, NSURLConnectionDataDelegate, NSCoding, NSCopying>
{
    BOOL _cancelled;
    BOOL _shouldUseCredentialStorage;
    short _state;
    NSURLConnection *_connection;
    NSSet *_runLoopModes;
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSError *_error;
    NSData *_responseData;
    NSString *_responseString;
    unsigned int _responseStringEncoding;
    NSOutputStream *_outputStream;
    NSURLCredential *_credential;
    NSDictionary *_userInfo;
    unsigned int _backgroundTaskIdentifier;
    id _uploadProgress;
    id _downloadProgress;
    id _authenticationAgainstProtectionSpace;
    id _authenticationChallenge;
    id _cacheResponse;
    id _redirectResponse;
    NSRecursiveLock *_lock;
    long long _totalBytesRead;
}

+ (id)networkRequestThread;
+ (void)networkRequestThreadEntryPoint:(id)fp8;
- (void)setLock:(id)fp8;
- (id)lock;
- (void)setRedirectResponse:(id)fp(null);
- (id)redirectResponse;
- (void)setCacheResponse:(id)fp(null);
- (id)cacheResponse;
- (void)setAuthenticationChallenge:(id)fp(null);
- (id)authenticationChallenge;
- (void)setAuthenticationAgainstProtectionSpace:(id)fp(null);
- (id)authenticationAgainstProtectionSpace;
- (void)setDownloadProgress:(id)fp(null);
- (id)downloadProgress;
- (void)setUploadProgress:(id)fp(null);
- (id)uploadProgress;
- (void)setBackgroundTaskIdentifier:(unsigned int)fp8;
- (unsigned int)backgroundTaskIdentifier;
- (void)setUserInfo:(id)fp8;
- (id)userInfo;
- (void)setShouldUseCredentialStorage:(BOOL)fp8;
- (BOOL)shouldUseCredentialStorage;
- (void)setCredential:(id)fp8;
- (id)credential;
- (id)outputStream;
- (void)setTotalBytesRead:(long long)fp8;
- (long long)totalBytesRead;
- (void)setResponseStringEncoding:(unsigned int)fp8;
- (void)setResponseString:(id)fp8;
- (void)setResponseData:(id)fp8;
- (id)responseData;
- (void)setError:(id)fp8;
- (id)error;
- (void)setResponse:(id)fp8;
- (id)response;
- (void)setRequest:(id)fp8;
- (id)request;
- (void)setRunLoopModes:(id)fp8;
- (id)runLoopModes;
- (void)setConnection:(id)fp8;
- (id)connection;
- (void)setCancelled:(BOOL)fp8;
- (BOOL)isCancelled;
- (short)state;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)connection:(id)fp8 willCacheResponse:(id)fp12;
- (void)connection:(id)fp8 didFailWithError:(id)fp12;
- (void)connectionDidFinishLoading:(id)fp8;
- (void)connection:(id)fp8 didReceiveData:(id)fp12;
- (void)connection:(id)fp8 didReceiveResponse:(id)fp12;
- (void)connection:(id)fp8 didSendBodyData:(int)fp12 totalBytesWritten:(int)fp16 totalBytesExpectedToWrite:(int)fp20;
- (id)connection:(id)fp8 willSendRequest:(id)fp12 redirectResponse:(id)fp16;
- (id)connection:(id)fp8 needNewBodyStream:(id)fp12;
- (BOOL)connectionShouldUseCredentialStorage:(id)fp8;
- (void)connection:(id)fp8 didReceiveAuthenticationChallenge:(id)fp12;
- (BOOL)connection:(id)fp8 canAuthenticateAgainstProtectionSpace:(id)fp12;
- (void)cancelConnection;
- (void)cancel;
- (void)finish;
- (void)operationDidStart;
- (void)start;
- (BOOL)isConcurrent;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (BOOL)isReady;
- (void)resume;
- (BOOL)isPaused;
- (void)pause;
- (unsigned int)responseStringEncoding;
- (id)responseString;
- (void)setState:(short)fp8;
- (void)setRedirectResponseBlock:(id)fp(null);
- (void)setCacheResponseBlock:(id)fp(null);
- (void)setAuthenticationChallengeBlock:(id)fp(null);
- (void)setAuthenticationAgainstProtectionSpaceBlock:(id)fp(null);
- (void)setDownloadProgressBlock:(id)fp(null);
- (void)setUploadProgressBlock:(id)fp(null);
- (void)setShouldExecuteAsBackgroundTaskWithExpirationHandler:(id)fp(null);
- (void)setOutputStream:(id)fp8;
- (void)setInputStream:(id)fp8;
- (id)inputStream;
- (void)setCompletionBlock:(id)fp(null);
- (id)description;
- (void)dealloc;
- (id)initWithRequest:(id)fp8;
- (void)flushOutputStream;

@end

