/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_AVAudioSessionCategoryPlayback.h"

@class NSMutableArray, NSMutableDictionary, NSString, NSUserDefaults;

@interface RedditAPI : _AVAudioSessionCategoryPlayback
{
    NSString *modhash;
    NSString *cookie;
    NSMutableDictionary *connections;
    NSMutableArray *hideQueue;
    NSString *authenticatedUser;
    id loginResultCallBackTarget;
    id postFetchResultCallBackTarget;
    id commentFetchResultCallBackTarget;
    id subredditListCallBackTarget;
    id inboxCallBackTarget;
    id userInfoCallBackTarget;
    id runAfterLoginTarget;
    id replyResultCallBackTarget;
    id captchaCallBackTarget;
    id suggestTitleCallBackTarget;
    id submitPostCallBackTarget;
    id imgurCallBackTarget;
    id subscribeCallBackTarget;
    id subredditInfoCallBackTarget;
    id announcementCheckCallBackTarget;
    NSString *runAfterLoginMethod;
    id runAfterUserCheckTarget;
    NSString *runAfterUserCheckMethod;
    BOOL authenticated;
    BOOL isMod;
    BOOL hasMail;
    BOOL hasModMail;
    int karmaLink;
    int karmaComment;
    BOOL loadingPosts;
    BOOL loadingMessages;
    NSUserDefaults *prefs;
    NSString *server;
    NSString *cookieDomain;
    BOOL currentlyAuthenticating;
    BOOL isSubscribingToSubreddit;
    NSString *subreddit_id_for_subscribe_or_unsubscribe;
    long requestCounter;
    NSString *_userIdent;
}

+ (id)getLinkType:(id)fp8;
+ (BOOL)isSelfLink:(id)fp8;
+ (BOOL)isVideoLink:(id)fp8;
+ (BOOL)isImageLink:(id)fp8;
+ (id)fixImgurLinkForCanvas:(id)fp8;
+ (id)fixImgurLink:(id)fp8;
+ (id)removeImgurURLParameters:(id)fp8;
+ (id)useLowResImgurVersion:(id)fp8;
+ (id)useMediumThumbnailImgurVersion:(id)fp8;
+ (id)useTinyResImgurVersion:(id)fp8;
+ (id)shared;
- (void)setUserIdent:(id)fp8;
- (id)userIdent;
- (void)setKarmaComment:(int)fp8;
- (int)karmaComment;
- (void)setKarmaLink:(int)fp8;
- (int)karmaLink;
- (void)setHasModMail:(BOOL)fp8;
- (BOOL)hasModMail;
- (void)setHasMail:(BOOL)fp8;
- (BOOL)hasMail;
- (void)setIsMod:(BOOL)fp8;
- (BOOL)isMod;
- (void)setUserInfoCallBackTarget:(id)fp8;
- (id)userInfoCallBackTarget;
- (void)setPostFetchResultCallBackTarget:(id)fp8;
- (id)postFetchResultCallBackTarget;
- (void)setCommentFetchResultCallBackTarget:(id)fp8;
- (id)commentFetchResultCallBackTarget;
- (void)setImgurCallBackTarget:(id)fp8;
- (id)imgurCallBackTarget;
- (void)setSubredditListCallBackTarget:(id)fp8;
- (id)subredditListCallBackTarget;
- (void)setCurrentlyAuthenticating:(BOOL)fp8;
- (BOOL)currentlyAuthenticating;
- (void)setLoadingMessages:(BOOL)fp8;
- (BOOL)loadingMessages;
- (void)setLoadingPosts:(BOOL)fp8;
- (BOOL)loadingPosts;
- (void)setAuthenticatedUser:(id)fp8;
- (id)authenticatedUser;
- (void)setAuthenticated:(BOOL)fp8;
- (BOOL)authenticated;
- (void)setCookie:(id)fp8;
- (id)cookie;
- (void)setModhash:(id)fp8;
- (id)modhash;
- (void)setServer:(id)fp8;
- (id)server;
- (void).cxx_destruct;
- (void)checkRedditStatus;
- (id)getStoredSubredditsForAuthenticatedUser;
- (void)storeSubredditResponse:(id)fp8;
- (id)hideQueue;
- (void)checkLatestAnnouncementsWithCallBackTarget:(id)fp8;
- (void)latestAnnouncementResponse:(id)fp8;
- (void)userInfoResponse:(id)fp8;
- (void)fetchMessagesInBox:(id)fp8 afterMessageID:(id)fp12 withCallBackTarget:(id)fp16;
- (void)inboxFetchResponse:(id)fp8;
- (void)markAllMessagesAsRead;
- (void)markAllModMailAsRead;
- (void)fetchSubscribedRedditsWithCallBackTarget:(id)fp8;
- (void)subscribedRedditsResponse:(id)fp8;
- (void)fetchPostsForSubreddit:(id)fp8 afterPostID:(id)fp12 additionalParameters:(id)fp16 fetchCount:(int)fp20 callBackTarget:(id)fp24;
- (void)searchPostsForKeywords:(id)fp8 forSubreddit:(id)fp12 afterPostID:(id)fp16 sortBy:(id)fp20 callBackTarget:(id)fp24;
- (void)fetchPostResponse:(id)fp8;
- (void)subredditInfoForSubredditName:(id)fp8 callBackTarget:(id)fp12;
- (void)searchSubredditsForName:(id)fp8 callBackTarget:(id)fp12;
- (void)searchSubredditsResponse:(id)fp8;
- (void)fetchCommentsForPostID:(id)fp8 sortedBy:(id)fp12 limitToNumber:(int)fp16 callBackTarget:(id)fp20;
- (void)fetchCommentsResponse:(id)fp8;
- (void)loginUserResponse:(id)fp8;
- (BOOL)acquireFreshAuthTokenIfNecessary;
- (void)submitReply:(id)fp8 withCallBackTarget:(id)fp12;
- (void)subscribeOrUnsubscribeToSubreddit:(id)fp8 isSubscribing:(BOOL)fp12 withCallBackTarget:(id)fp16;
- (void)apiPostsResponse:(id)fp8;
- (void)subscribeToSubredditWithID:(id)fp8 withCallBackTarget:(id)fp12;
- (void)subscribeResponseReceived:(id)fp8;
- (void)submitChangeReply:(id)fp8 withCallBackTarget:(id)fp12;
- (void)replyResponseReceived:(id)fp8;
- (void)submitVote:(id)fp8;
- (void)voteResponseReceived:(id)fp8;
- (void)hidePostWithID:(id)fp8;
- (void)unhidePostWithID:(id)fp8;
- (void)savePostWithID:(id)fp8;
- (void)modApproveItemWithName:(id)fp8;
- (void)modDistinguishItemWithName:(id)fp8 distinguish:(BOOL)fp12;
- (void)modRemoveItemWithName:(id)fp8;
- (void)modMarkAsSpamItemWithName:(id)fp8;
- (void)modRemoveItemWithName:(id)fp8 spam:(BOOL)fp12;
- (void)markMessageReadWithID:(id)fp8;
- (void)unsavePostWithID:(id)fp8;
- (void)reportPostWithID:(id)fp8;
- (void)deleteCommentWithID:(id)fp8;
- (void)suggestTitleForLink:(id)fp8 withCallBackTarget:(id)fp12;
- (void)suggestTitleResponseReceived:(id)fp8;
- (void)requestCaptchaWithCallBackTarget:(id)fp8;
- (void)captchaResponseReceived:(id)fp8;
- (void)markReadResponseReceived:(id)fp8;
- (void)deleteResponseReceived:(id)fp8;
- (void)unsaveResponseReceived:(id)fp8;
- (void)saveResponseReceived:(id)fp8;
- (void)hideResponseReceived:(id)fp8;
- (void)unhideResponseReceived:(id)fp8;
- (void)loginUser:(id)fp8 withPassword:(id)fp12 callBackTarget:(id)fp16;
- (void)postImageToImgur:(id)fp8 callBackTarget:(id)fp12;
- (void)removeImageFromImgurWithDeleteHash:(id)fp8;
- (void)imgurDeleteResponse:(id)fp8;
- (void)imgurPostResponse:(id)fp8;
- (void)submitPost:(id)fp8 WithCallBackTarget:(id)fp12 useJSON:(BOOL)fp16;
- (void)submitPM:(id)fp8 WithCallBackTarget:(id)fp12;
- (void)submitPostResponseReceived:(id)fp8;
- (id)getErrorsInPostSubmission:(id)fp8;
- (void)doGetURL:(id)fp8 withConnectionCategory:(int)fp12 callBackTarget:(id)fp16 callBackMethod:(id)fp20 failedMethod:(id)fp24;
- (id)requestForUrl:(id)fp8;
- (void)doPostToURL:(id)fp8 withParams:(id)fp12 withConnectionCategory:(int)fp16 callBackTarget:(id)fp20 callBackMethod:(id)fp24 failedMethod:(id)fp28;
- (void)connectionFailedDialog:(id)fp8;
- (BOOL)isServerReachableInBackground;
- (void)testFunction:(id)fp8;
- (id)connection:(id)fp8 willSendRequest:(id)fp12 redirectResponse:(id)fp16;
- (void)connectionDidFinishLoading:(id)fp8;
- (void)connection:(id)fp8 didFailWithError:(id)fp12;
- (void)connection:(id)fp8 didReceiveData:(id)fp12;
- (void)connection:(id)fp8 didReceiveResponse:(id)fp12;
- (void)apiLoginResponse:(id)fp8;
- (void)authenticateStage2:(id)fp8;
- (void)fetchUserInfo:(id)fp8 withCallback:(id)fp12;
- (void)apiUserInfoResponse:(id)fp8;
- (void)authenticateWithCallbackTarget:(id)fp8 andCallBackAction:(id)fp12;
- (void)addPostToHideQueue:(id)fp8;
- (BOOL)isPostInHideQueue:(id)fp8;
- (void)showAuthorisationRequiredDialog;
- (void)processFirstInPostQueue;
- (int)hideQueueLength;
- (id)init;
- (void)resetCallbacks;
- (void)resetConnectionsForSubreddits;
- (void)resetConnectionsForComments;
- (void)resetConnectionsForMessages;
- (void)resetConnectionsForUserDetails;
- (void)resetConnectionsForPosts;
- (void)clearConnectionsWithCategory:(int)fp8;

@end

